plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
	id 'net.researchgate.release' version '2.8.1'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.version
group = project.maven_group

repositories {
	/* REI Integration */
	maven { url "https://maven.shedaniel.me/" }
	/* Mod Menu Integration */
	maven { url "https://maven.terraformersmc.com/releases/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	/* Mod Menu Integration */
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.clothconfig_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modApi "com.terraformersmc:modmenu:${project.modmenu_version}"

	/* REI Integration */
	modApi "dev.architectury:architectury-fabric:6.2.43"
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:$rei_version"

	modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
}

processResources {
	inputs.property "version", "${project.minecraft_version}-${project.version}"

	filesMatching("fabric.mod.json") {
		expand "version": "${project.minecraft_version}-${project.version}"
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	withSourcesJar()
	withJavadocJar()
}

jar {
	from("LICENSE")
}

release {
	if (project.hasProperty('release_commit_prefix')) {
		preTagCommitMessage = project.release_commit_prefix
	}
	if (project.hasProperty('development_commit_prefix')) {
		newVersionCommitMessage = project.development_commit_prefix
	}
	tagTemplate = "${project.minecraft_version}".concat('-$version')
	pushReleaseVersionBranch = 'master'
    git {
        requireBranch = /master|develop/
    }
	ignoredSnapshotDependencies = ['fabric-loom:fabric-loom.gradle.plugin']
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			groupId = "${group}"
			artifactId = "${archivesBaseName}"
			version = "${project.minecraft_version}-${version}"
			from components.java
			pom {
				name = "${project.pretty_name}"
				url = "${project.website_url}"
				if (project.hasProperty('scm_connection_url') && project.hasProperty('scm_project_url')) {
					scm {
						connection = "scm:git:${project.scm_connection_url}"
						url = project.scm_project_url
					}
				}
			}
		}
	}

	repositories {
		maven {
			if (project.hasProperty("publish_maven_repo_releases_url") && project.hasProperty("publish_maven_repo_snapshots_url")) {
				url = version.endsWith('-SNAPSHOT') ? project.publish_maven_repo_snapshots_url : project.publish_maven_repo_releases_url
				if (project.hasProperty("publish_maven_repo_username") && project.hasProperty("publish_maven_repo_password")) {
					credentials {
						username = project.publish_maven_repo_username
						password = project.publish_maven_repo_password
					}
				}
			}
		}
	}
}